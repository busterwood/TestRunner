<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="testIcons16.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="testIcons16.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADa
        CAAAAk1TRnQBSQFMAgEBBAEAAVABAAFQAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ADAAAcgB1wHSIQACPQHbAj0B2wI9
        AdYVAAI9AdsCPQHbAj0B228AA/8BXwHTAa4BMwHMAZkBtgHbAdAbAAI+AdwCPgHcAj4B3AI+AdwCPgHX
        DwACPgHcAj4B3AI+AdwCPgHcAj4B3AMAA/0B+wH8AfshAAL5AfoDAANVAwskAAMXA3oJAAP9AUsB0QGk
        ATMBzAGZATMBzAGZATMBzAGZAeUB7gHrFQACQAHaAkAB3gJAAd4CQAHeAkAB3gJAAd4CPwHZCQACQAHe
        AkAB3gJAAd4CQAHeAkAB3gJAAd4DAAGrAdgBywE/AeEByQHxAvIbAAGOAZEB3QE+AUIB5AP8LQADNwYA
        A/sBPgHPAaEBMwHMAZkBMwHMAZkBMwHMAZkBMwHMAZkBMwHOAZoD+hUAAkIB3wJCAd8CQgHfAkIB3wJC
        Ad8CQgHfAkEB2gMAAkIB3wJCAd8CQgHfAkIB3wJCAd8CQgHfAkIB3wYAAfIC8wP+GwAC4wHpA/sJAAPh
        A/4YAAP+A8oDAAM3AwAB9QL2ATcBzQGdATMBzAGZATMBzAGZATMBzAGZATMBzAGZATMBzAGZATMBzAGZ
        AUQBzQGhA/4VAAJDAeECQwHhAkMB4QJDAeECQwHhAkMB4QJDAeECQwHhAkMB4QJDAeECQwHhAkMB4QJD
        AeEYAAPDA4gD9xgAA+ceAAPRAwADNwHnAe4B6wEzAc4BmwEzAcwBmQEzAcwBmQEzAcwBmQEzAcwBmQEz
        AcwBmQEzAcwBmQEzAcwBmQEzAcwBmQFtAdEBsBgAAkUB4gJFAeICRQHiAkUB4gJFAeICRQHiAkUB4gJF
        AeICRQHiAkUB4gJFAeIGAAHTAeIB3AF0Ac0BuAHsAe4B7QkAA+8DXwNgA38MAAK6AdkBkwGUAdoGAAPn
        AwADtAMSA3gD9g8AA9EDAAM3AaAB3QHJATMBzAGZATMBzAGZATMBzAGZATMBzAGZAT4BzQGfAT0BzQGf
        ATMBzAGZATMBzAGZATMBzAGZATMBzAGZAaoB3gHPGAACRgHkAkYB5AJGAeQCRgHkAkYB5AJGAeQCRgHk
        AkYB5AJGAeQJAAHlAekB6AG3AdwB0AH1AvYJAAP3A18GYAP5CQABpQGnAdwBfAF+AdYGAAPnAwADwQMe
        Aw0DVgP1A/4JAAPRAwADNwMAAYMB0QG3ATMBzAGZATMBzAGZAUcB0QGjAfwC/QH0AfYB9QEzAc0BmgEz
        AcwBmQEzAcwBmQEzAcwBmQEzAcwBmQHgAeoB5xgAAkgB5QJIAeUCSAHlAkgB5QJIAeUCSAHlAkgB5SEA
        A+4DrgNgA4YVAAPnAwAD+wPHAyUDBQMwA+kD/QYAA9EDAAM3BgABbAHaAbMBWwHVAawD/gYAAdcB5QHg
        ATMBzAGZATMBzAGZATMBzAGZATMBzAGZATMBzQGaAfcC+BIAAkoB5wJKAecCSgHnAkoB5wJKAecCSgHn
        AkoB5wJKAecCSQHiDwAB2QHiAd4D/Q8AA/YDgAPeAwAC6AHtA/0JAAPnBgAD/APZAyoDAAMqA9kD/AMA
        A9EDAAM3GAABoQHaAcgBMwHMAZkBMwHMAZkBMwHMAZkBMwHMAZkBPgHRAaAD/gwAAksB6QJLAekCSwHp
        AksB6QJLAekCSwHpAksB6QJLAekCSwHpAksB6QJKAeQJAAGMAdMBwQFCAd4BxQH6AfsB+hsAAXUBeAHX
        AT4BQgHlA/4GAAPnCQAD/QPpAzADBQMlA9kDAAPRAwADNxsAAWYB1AGyATMBzAGZATMBzAGZATMBzAGZ
        ATMBzAGZAWYB2QGwCQACTQHqAk0B6gJNAeoCTQHqAk0B6gJNAeoCTQHqAk0B6gJNAeoCTQHqAk0B6gJN
        AeoCTAHlBgAG/gYAA/4PAAP+BgAC+AH5CQAD5wwAA/4D9QNWAw0D0QMAA9EDAAM3GwAD/gE9AdEBnwEz
        AcwBmQEzAcwBmQEzAcwBmQEzAcwBmQGlAdoByAMAAk4B7AJOAewCTgHsAk4B7AJOAewCTgHsAk4B7AMA
        Ak4B7AJOAewCTgHsAk4B7AJOAewCTgHsAk0B5wwAAX4BvQHpAZsBzAHqAwAD/wP7AwAD+wFBAbUB/wH7
        AvwPAAPnHgAD0QMAAzceAAH4AvkBMwHNAZoBMwHMAZkBMwHMAZkBMwHMAZkBMwHMAZkCVwHWAlAB7QJQ
        Ae0CUAHtAlAB7QJQAe0CUAHtCQACUAHtAlAB7QJQAe0CUAHtAlAB7QJQAe0MAAFbAbwE+gMAAdUB3QHj
        AVcBuQH4BgABagHEAfkB2wHhAeUPAAPhA/4YAAP+A8sDAAM3IQAB4AHqAecBMwHMAZkBMwHMAZkBMwHO
        AZsB6wHvAe4DAAJRAe8CUQHvAlEB7wJRAe8CUQHvDwACUQHvAlEB7wJRAe8CUQHvAlEB7xUAAeMB5wHq
        AXkBvAHpQgADNyQAAa4B2gHLAUoB0QGjA/sGAALxAfgCUwHwAlMB8AJTAfAVAAJTAfACUwHwAlMB8DMA
        A1YDCyQAAxcDeDYAA/8CYAHxGwACVAHxZgABQgFNAT4HAAE+AwABKAMAAUADAAEgAwABAQEAAQEGAAEB
        FgAD/4EAAf0B/wHHAfEE/wHwAf8BgwHgAZ8B/QIAAeABfwEBAcABjwH4AgABwAE/AoABzwH5AQ8B8AGA
        AR8BwAEBAf4BPwEfAfgBAAEfAeABAwEcATwBEAH4AQABDwHwAQcCHAEQATgBgAEHAfgBDwH+AR8BEAEY
        AcYBAwHwAQcBzwGJARgBCAH/AQEB4AEDAY8B+AEcAQgB/wGBAcABAQGbAe0BHgEIAf8DgAHyAUcBHwH4
        Af8BwAEBAcAB8gFnAQ8B8AH/AeABgwHgAf4BfwIAAf8B8QGHAfEC/wIAAv8BzwH7BP8L
</value>
  </data>
</root>